# Application URL
baseURL=https://tutorialsninja.com/demo/
#execution_env = remote
execution_env = local
## Browser to use (chrome, edge, firefox)
#browser=chrome
#
## Timeout values in seconds
#implicitWait=10
#explicitWait=20
#
## User credentials (example)
username=ahsan@gmail.com
password=Test@123
#
## Log file path
#logPath=logs/app.log









#======================================= Selenium Grid ============================================#



#java -jar selenium-server-4.36.0.jar standalone

#docker
#docker version
#Docker Compose version v2.39.4-desktop.1

#images
#List images	docker images
#Pull image	docker pull <image>:<tag>
#Remove image	docker rmi <image>

#containers
#List running containers	docker ps
#List all containers (including stopped)	docker ps -a
#Run a container	docker run <options> <image>
#Run interactively	docker run -it <image> /bin/bash
#Run in background (detached)	docker run -d <image>
#Assign name to container	docker run --name <name> <image>
#Start container	docker start <container>
#Stop container	docker stop <container>
#Restart container	docker restart <container>
#Remove container	docker rm <container>
#View container logs	docker logs <container>
#Execute command in running container	docker exec -it <container> <command>

#Selenium Grid images (hub, node-chrome, node-edge)
#docker pull selenium/hub
#docker pull selenium/node-chrome
#docker pull selenium/node-edge






#1- Create a Docker network.
#docker network create selenium-grid

#2- Create containers for:
#selenium/hub
#docker run -d --name selenium-hub --network selenium-grid -p 4442:4442 -p 4443:4443 -p 4444:4444 selenium/hub:latest

##selenium/node-chrome
#docker run -d --name chrome-node --network selenium-grid -e SE_EVENT_BUS_HOST=selenium-hub -e SE_EVENT_BUS_PUBLISH_PORT=4442 -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 selenium/node-chrome:latest

##selenium/node-edge
#docker run -d --name edge-node --network selenium-grid -e SE_EVENT_BUS_HOST=selenium-hub -e SE_EVENT_BUS_PUBLISH_PORT=4442 -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 selenium/node-edge:latest

#Verify Running Containers (Optional but useful)
#docker ps

#Inspect the Network (Optional check for connections)
#docker network inspect selenium-grid

#To validate that all containers (hub and nodes) are connected to the same Docker network
#docker network inspect selenium-grid

# Open the Grid UI:
#http://localhost:4444/ui


############################### What parallel="tests" does: ###############################
#It tells TestNG to run multiple <test> blocks concurrently (in parallel threads).
#If you omit it, TestNG will run the <test> blocks sequentially, one after another.
#It?s purely a TestNG-level directive, unrelated to Docker or Selenium Grid itself.